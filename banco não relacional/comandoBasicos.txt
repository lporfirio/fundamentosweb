 show dbs // mostrar bancos de dados

 show collections // monstrar coleções

 db.createCollection('nome') // criar collections

 db.nome.drop() // apagar collection

db.estados.insert({nome:"Alagoas", sigla: "AL", regiao: "Nordeste", populacao: 3322000, _id: ObjectId()}) // inserir dados na collection

db.estados.insert({nome:"São Paulo", sigla: "SP", regiao: "Sudeste", cidades: [
    {_id: ObjectId() , nome: "Campinas", area: 795.7, prefeito: "Jonas Donizette", populacao: 1081000  }
]})

db.estados.find() // exibir dados da collection

db.estados.find({sigla: "RJ"}) // consultar com filtro

db.estados.find({$or: [{sigla: "RJ"}, {sigla: "AC"}]}) // consultar mais de um item

db.estados.find({populacao: {$exists: true}}) // vai mostrar os itens em que o respectivo atributo está presente

db.estados.find({sigla: "SP"}, {nome: 1, sigla: 1, _id: 0}) // para filtrar quais atributos devem ou não aparecer

db.estados.find({sigla: "SP"}, {"cidades.nome":1, _id: 0}) // para mostrar somente os itens do array cidade

db.estados.find({ sigla: "SP" }, { cidades: { $slice: 1 }}) // para filtrar somente um determinado item do array

___________________
    AGREGADORES
___________________

db.estados.aggregate([
    { $project: {nome: 1, "cidades.nome": 1, _id: 0} }
])

db.estados.aggregate([
    { $project: {populacao: {$sum: "$cidades.populacao"}, sigla: 1, _id:0 }},
    { $group: {_id: null, populacaoTotal: {$sum: "$populacao"}}},
    { $project: {_id: 0, populacaoTotal: 1}},
])


db.estados.aggregate([
    { $match: {"cidades.nome": "Sorocaba"}},
    { $unwind: "$cidades"},
    { $match: {"cidades.nome": "Sorocaba"}},
    { $project: {_id: "cidades._id"}}
])


__________________
    UPDATE
__________________

db.estados.updateOne({sigla: "AL"}, {$set: {cidades: [{nome:"Sergipe"}]}})

db.estados.updateOne({sigla: "SP"}, {$push: {cidades: {nome: "Santos", populacao: 433043}}})

__________________
    REMOVE
__________________

db.estados.countDocuments() // para contar os documentos da collection

db.estados.deleteOne({sigla: "AC"}) // remover um documento

db.estados.deleteMany({populacao: {$exists: true}}) // remove mais de um item

__________________
    inserir
__________________
db.empresas.insertOne({
    nome: "Bradesco",
    estadoId: ObjectId("64219458be6394da0cee5d78")
})

____________________________________
        consulta LOOKUP
____________________________________
db.empresas.aggregate([
    {$match: {nome: "Bradesco"}},
    {$lookup: {
        from: "estados",
        localField: "estadoId",
        foreignField: "_id",
        as: "estado"
    }},
    {$unwind: "$estado"},
])

db.empresas.aggregate([
    {$match: {nome: "Vale"}},
    {$lookup: {
        from: "estados",
        localField: "cidadeId",
        foreignField: "cidades._id",
        as: "estado"
    }},
    {$unwind: "$estado"},
    {$unwind: "$estado.cidades"},
    {$addFields: { mesmaCidade: {$cmp: ["estados.cidades._id", "$cidadeId"]}}},
    {$match: {mesmaCidade: 0}},
])